version: '1'

services:
  # postgresql-master:
  #   image: 'bitnami/postgresql:latest'
  #   ports:
  #     - 50000:5432
  #   volumes:
  #     - 'postgresql_master_data:/bitnami/postgresql'
  #     - ./:/docker-entrypoint-initdb.d
  #   environment:
  #     - POSTGRESQL_REPLICATION_MODE=master
  #     - POSTGRESQL_REPLICATION_USER=repl_user
  #     - POSTGRESQL_REPLICATION_PASSWORD=repl_password
  #     - POSTGRESQL_USERNAME=my_user
  #     - POSTGRESQL_PASSWORD=my_password
  #     - POSTGRESQL_DATABASE=my_database
  #     # - POSTGRESQL_POSTGRES_PASSWORD=superuser_password
  #     # - POSTGRESQL_POSTGRES_PASSWORD=superuser_password

  # postgresql-slave:
  #   image: 'bitnami/postgresql:latest'
  #   ports:
  #     - 50001:5432
  #   depends_on:
  #     - postgresql-master
  #   environment:
  #     - POSTGRESQL_REPLICATION_MODE=slave
  #     - POSTGRESQL_REPLICATION_USER=repl_user
  #     - POSTGRESQL_REPLICATION_PASSWORD=repl_password
  #     - POSTGRESQL_MASTER_HOST=postgresql-master
  #     - POSTGRESQL_PASSWORD=my_password
  #     - POSTGRESQL_MASTER_PORT_NUMBER=5432

  postgresql-master:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: "my_database"
      POSTGRES_USER: "my_user"
      POSTGRES_PASSWORD: "my_password"
    volumes:
      - ./master_init/:/docker-entrypoint-initdb.d
    ports:
      - "50000:5432"

  dwh_detailed:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: "dwh_detailed"
      POSTGRES_USER: "dwh_user"
      POSTGRES_PASSWORD: "dwh_pass"
    volumes:
      - ./dwh_init_folder/:/docker-entrypoint-initdb.d
    ports:
      - "50002:5432"

      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper

    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT


  debezium:
    image: debezium/connect:1.4
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    ports:
      - 8083:8083

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8081:8081
    depends_on: [zookeeper, kafka]
  
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    restart: always
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null 

volumes:
  postgresql_master_data: